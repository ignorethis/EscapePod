<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:EscapePod.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="using:Avalonia.Xaml.Interactivity"
        xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="clr-namespace:EscapePod.Models"
        xmlns:iTunes="clr-namespace:iTunesPodcastFinder.Models;assembly=iTunesPodcastFinder"
        mc:Ignorable="d"
        d:DesignWidth="600"
        d:DesignHeight="800"
        x:Class="EscapePod.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Height="800"
        Icon="/Assets/icon.ico"
        Title="EscapePod"
        Width="600">

    <Design.DataContext>
        <vm:MainWindowViewModelDesign />
    </Design.DataContext>

    <Grid RowDefinitions="Auto, Auto, Auto, Auto, Auto, *, Auto, Auto">
        <Grid Grid.Row="0" Grid.Column="0" Height="200" ColumnDefinitions="Auto,*">
            <Image Grid.Column="0" Source="{Binding SelectedPodcastImage}" />
            <WebView Grid.Column="1" HtmlContent="{Binding EpisodeDescriptionHtmlStyled}" />
        </Grid>

        <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
            <StackPanel.Styles>
                <Style Selector="Button">
                    <Setter Property="Width" Value="100" />
                </Style>
            </StackPanel.Styles>

            <Button
                Command="{Binding PlayOrPauseEpisodeCommand}"
                CommandParameter="{Binding SelectedEpisode}"
                Content="{Binding PlayOrPauseButtonContent}" />
            <Button Command="{Binding NextEpisodeCommand}" Content="Next" />
            <Button Command="{Binding PreviousEpisodeCommand}" Content="Previous" />
            <Button Command="{Binding UpdateAllPodcastsCommand}" Content="Update" />
            <Button Command="{Binding SelectLastEpisodeCommand}" Content="Last"/>
            <Button Command="{Binding SelectFirstEpisodeCommand}" Content="First"/>
        </StackPanel>

        <DockPanel Grid.Row="3">
            <Slider
                DockPanel.Dock="Right"
                Maximum="1.0"
                Padding="8,0"
                TickFrequency="0.10"
                TickPlacement="None"
                Value="{Binding Volume}"
                Width="100" />

            <Slider
                Padding="8,0"
                Maximum="{Binding PlayingEpisodeListenProgressMax.TotalSeconds}"
                TickPlacement="None"
                TickFrequency="1"
                Value="{Binding PlayingEpisodeListenProgress}" />
        </DockPanel>

        <TextBox
            Grid.Row="4"
            Text="{Binding SearchValue}"
            Watermark="Search for podcasts" />

        <Grid Grid.Row="5" Grid.Column="0" ColumnDefinitions="*,*">
            <ListBox
                Grid.Column="0"
                Grid.ColumnSpan="2"
                ItemsSource="{Binding SearchPodcasts, Mode=OneWay}"
                SelectedValue="{Binding SelectedSearchPodcast, Mode=TwoWay}"
                ZIndex="{Binding SearchListBoxIndex, Mode=OneWay}">
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type iTunes:Podcast}">
                        <DockPanel>
                            <i:Interaction.Behaviors>
                                <ia:EventTriggerBehavior EventName="DoubleTapped">
                                    <ia:InvokeCommandAction
                                        Command="{Binding $parent[ItemsControl].((vm:MainWindowViewModel)DataContext).AddPodcastCommand}"
                                        CommandParameter="{Binding}" />
                                </ia:EventTriggerBehavior>
                            </i:Interaction.Behaviors>

                            <Button
                                DockPanel.Dock="Right"
                                Content="+"
                                Command="{Binding $parent[ItemsControl].((vm:MainWindowViewModel)DataContext).AddPodcastCommand}"
                                CommandParameter="{Binding}"
                                Margin="2" />

                            <TextBlock
                                Padding="8"
                                Text="{Binding Name}"
                                TextTrimming="CharacterEllipsis" />
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <ListBox
                Grid.Column="0"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ItemsSource="{Binding Podcasts}"
                SelectedItem="{Binding SelectedPodcast}">
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:Podcast}">
                        <DockPanel>
                            <Button
                                DockPanel.Dock="Right"
                                Content="-"
                                Command="{Binding $parent[ItemsControl].((vm:MainWindowViewModel)DataContext).DeletePodcastCommand}"
                                CommandParameter="{Binding}"
                                Margin="2" />
                            <TextBlock
                                Padding="8"
                                Text="{Binding Name}"
                                TextTrimming="CharacterEllipsis" />
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <ListBox
                Grid.Column="1"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Hidden"
                AutoScrollToSelectedItem="True"
                ItemsSource="{Binding SelectedPodcast.Episodes}"
                SelectedItem="{Binding SelectedEpisode}">
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:Episode}">
                        <Grid ColumnDefinitions="*,Auto">
                            <ProgressBar
                                BorderThickness="0"
                                CornerRadius="0"
                                Grid.Column="0"
                                Value="{Binding ListenPercent, Mode=OneWay}"
                                ZIndex="-1"
                                VerticalAlignment="Stretch"
                                Foreground="{StaticResource ThemeForegroundColor}"
                                Background="Transparent" />

                            <DockPanel Grid.Column="0">
                                <Button
                                    DockPanel.Dock="Right"
                                    Command="{Binding $parent[ItemsControl].((vm:MainWindowViewModel)DataContext).PlayOrPauseEpisodeCommand}"
                                    CommandParameter="{Binding}"
                                    Content=">"
                                    Margin="2" />

                                <TextBlock
                                    Padding="8"
                                    Text="{Binding Name}"
                                    TextTrimming="CharacterEllipsis" />
                            </DockPanel>

                            <!--zeichen wird grad abgespielt-->
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>

        <TextBlock
            Grid.Row="6"
            Grid.Column="0"
            Padding="5"
            Text="{Binding Path=Status}" />
    </Grid>
</Window>
