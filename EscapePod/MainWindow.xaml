<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:loadin="clr-namespace:LoadingIndicators.WPF;assembly=LoadingIndicators.WPF"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        xmlns:escapePod="clr-namespace:EscapePod"
        xmlns:viewModels="clr-namespace:EscapePod.ViewModels"
        x:Class="EscapePod.MainWindow"
        mc:Ignorable="d"
        Title="EscapePod" 
        Height="850" 
        Width="525"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True"
        Background="Black"
        Icon="/Resources/icon.ico"
        d:DataContext="{d:DesignInstance Type=viewModels:DesignTimeViewModel, IsDesignTimeCreatable=True}">
    <Grid>
        <Grid.ColumnDefinitions/>
            
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Height="200">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Image Grid.Column="0" Source="{Binding SelectedPodcast.LocalTitleCardFileFullName}" />
            <ScrollViewer Grid.Column="1" VerticalAlignment="Center" VerticalScrollBarVisibility="Auto">
                <TextBlock Text="{Binding SelectedEpisode.Description}" Foreground="White" TextWrapping="Wrap" Margin="5" TextAlignment="Center" />
            </ScrollViewer>
        </Grid>
        <ProgressBar x:Name="progressBar" Grid.Row="1" Width="auto" Height="10" Value="{Binding PlayingEpisode.Timestamp}" Maximum="{Binding PlayingEpisode.EpisodeLength}" MouseLeftButtonUp="ProgressBar_MouseLeftButtonUp" Background="Black" Foreground="Gray"/>
        <StackPanel Orientation="Horizontal" Grid.Row="2">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Width" Value="100" />
                    <Setter Property="Height" Value="25" />
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="Foreground" Value="White"/>
                </Style>
            </StackPanel.Resources>
            <Button Content="{Binding PlayOrPauseButtonContent}" Click="PlayOrPause_Click" />
            <Button Content="Next" Click="Next_Click" />
            <Button Content="Previous" Click="Previous_Click"/>
            <Button Content="Update" Click="Update_Click" />
            <Button Content="Last" Click="Last_Click"/>
            <Button Content="First" Click="First_Click"/>
        </StackPanel>
        <StackPanel Grid.Row="3">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <escapePod:TextBoxWithPlaceholder
                    Grid.Column="0"
                    Text="{Binding SearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=200}"
                    Background="Black"
                    Foreground="White"
                    Height="25"
                    Placeholder="{Binding SearchPlaceholder}"
                    VerticalContentAlignment="Center" />
                <Button Grid.Column="1" Content="Add" Height="25" Click="Add_Click" Background="Black" Foreground="White" Padding="5, 0" />
            </Grid>
            <Slider Maximum="1.0" Background="Black" TickPlacement="BottomRight" TickFrequency="0.10" Value="{Binding Volume}" />
        </StackPanel>
        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ListBox Grid.ColumnSpan="2" Panel.ZIndex="{Binding SearchListBoxIndex, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding SearchPodcasts, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=200}" SelectedItem="{Binding SelectedSearchPodcast, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=200}" DisplayMemberPath="Name" Background="Black" Foreground="White" HorizontalContentAlignment="Stretch"/>
            <ListBox Grid.Column="0" Name="PodcastBox" ItemsSource="{Binding Podcasts}" SelectedItem="{Binding SelectedPodcast}" Background="Black" Foreground="White" HorizontalContentAlignment="Stretch">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Name}"/>
                            <Button Grid.Column="1" Content="-" Tag="{Binding}" Width="16" Height="16" Background="Black" Foreground="White" Click="Delete_Click" />
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <ListBox Grid.Column="1" ItemsSource="{Binding SelectedPodcast.EpisodeList}" SelectedItem="{Binding SelectedEpisode}" MouseDoubleClick="EpisodeList_DoubleClick" Background="Black" Foreground="White" escapePod:ScrollCurrentItemIntoViewBehavior.AutoScrollToCurrentItem="True" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding EpisodeName}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding EpisodeFinished}" Value="true">
                                                <Setter Property="Background" Value="Gray" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <!--zeichen wird grad abgespielt-->
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</Window>
